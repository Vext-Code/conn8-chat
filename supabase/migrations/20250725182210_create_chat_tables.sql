-- Create the 'chats' table
CREATE TABLE public.chats (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,
    title TEXT NOT NULL,
    webhook_url TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Enable Row Level Security for chats
ALTER TABLE public.chats ENABLE ROW LEVEL SECURITY;

-- Create policy for users to view their own chats
CREATE POLICY "Users can view their own chats."
ON public.chats FOR SELECT
USING (auth.uid() = user_id);

-- Create policy for users to create their own chats
CREATE POLICY "Users can create their own chats."
ON public.chats FOR INSERT
WITH CHECK (auth.uid() = user_id);

-- Create policy for users to update their own chats
CREATE POLICY "Users can update their own chats."
ON public.chats FOR UPDATE
USING (auth.uid() = user_id);

-- Create policy for users to delete their own chats
CREATE POLICY "Users can delete their own chats."
ON public.chats FOR DELETE
USING (auth.uid() = user_id);


-- Create the 'messages' table
CREATE TABLE public.messages (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    chat_id UUID REFERENCES public.chats(id) ON DELETE CASCADE NOT NULL,
    role TEXT NOT NULL, -- 'user' or 'bot'
    content TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Enable Row Level Security for messages
ALTER TABLE public.messages ENABLE ROW LEVEL SECURITY;

-- Create policy for users to view messages in their own chats
CREATE POLICY "Users can view messages in their chats."
ON public.messages FOR SELECT
USING (
  EXISTS (
    SELECT 1
    FROM public.chats
    WHERE chats.id = messages.chat_id
      AND chats.user_id = auth.uid()
  )
);

-- Create policy for users to insert messages into their own chats
CREATE POLICY "Users can insert messages in their chats."
ON public.messages FOR INSERT
WITH CHECK (
  EXISTS (
    SELECT 1
    FROM public.chats
    WHERE chats.id = messages.chat_id
      AND chats.user_id = auth.uid()
  )
);
